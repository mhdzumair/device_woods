From d5eff053249505cde2382bc58ead68d6a68b3ea5 Mon Sep 17 00:00:00 2001
From: danielhk <daniel.p6800@gmail.com>
Date: Sat, 3 Mar 2018 20:05:51 +0800
Subject: [PATCH 01/13] libaudiohal:LEGACY_MTK_AV_BLOB support

Set LEGACY_MTK_AV_BLOB := ture to enable
Oreo's audio_stream_in_t definition changed. Old blobs from MTK (and
others) is not compatible. This patch would hopefully work for all old
audio HALs and fix all the issues arised.
1. At openInputStream(), store a copy of the struct from audio HAL to
mIn.
2. Assign the supported entries to halStream and assign NULL to those
unsupported.
3. close the mIn and free the memory at closeOutputStream()
Note: legacy_audio_stream_in_t is defined in the overrided audio.h in
device tree
---
 media/libaudiohal/Android.mk         |  4 ++++
 media/libaudiohal/DeviceHalLocal.cpp | 17 +++++++++++++++++
 media/libaudiohal/DeviceHalLocal.h   |  4 +++-
 3 files changed, 24 insertions(+), 1 deletion(-)

diff --git a/media/libaudiohal/Android.mk b/media/libaudiohal/Android.mk
index 827908ec8..38ddb7b4b 100644
--- a/media/libaudiohal/Android.mk
+++ b/media/libaudiohal/Android.mk
@@ -17,6 +17,10 @@ LOCAL_SRC_FILES := \
 
 LOCAL_CFLAGS := -Wall -Werror
 
+ifeq ($(BOARD_USES_LEGACY_MTK_AV_BLOB), true)
+    LOCAL_CFLAGS += -DLEGACY_MTK_AV_BLOB
+endif
+
 ifeq ($(USE_LEGACY_LOCAL_AUDIO_HAL), true)
 
 # Use audiohal directly w/o hwbinder middleware.
diff --git a/media/libaudiohal/DeviceHalLocal.cpp b/media/libaudiohal/DeviceHalLocal.cpp
index fc098f513..acbfc8b2d 100644
--- a/media/libaudiohal/DeviceHalLocal.cpp
+++ b/media/libaudiohal/DeviceHalLocal.cpp
@@ -137,8 +137,20 @@ status_t DeviceHalLocal::openInputStream(
             handle, devices, flags,
             config->sample_rate, config->format, config->channel_mask,
             address, source);
+#ifdef LEGACY_MTK_AV_BLOB
+    halStream = (audio_stream_in_t *)calloc(1, sizeof(audio_stream_in_t));
+    int openResult = mDev->open_input_stream(
+            mDev, handle, devices, config, &mIn, flags, address, source);
+    memcpy(halStream, mIn, sizeof(legacy_audio_stream_in_t));
+    halStream->get_capture_position = NULL;
+    halStream->start = NULL;
+    halStream->stop = NULL;
+    halStream->create_mmap_buffer = NULL;
+    halStream->get_mmap_position = NULL;
+#else
     int openResult = mDev->open_input_stream(
             mDev, handle, devices, config, &halStream, flags, address, source);
+#endif
     if (openResult == OK) {
         *inStream = new StreamInHalLocal(halStream, this);
     }
@@ -193,7 +205,12 @@ void DeviceHalLocal::closeOutputStream(struct audio_stream_out *stream_out) {
 }
 
 void DeviceHalLocal::closeInputStream(struct audio_stream_in *stream_in) {
+#ifdef LEGACY_MTK_AV_BLOB
+    mDev->close_input_stream(mDev, mIn);
+    free(stream_in);
+#else
     mDev->close_input_stream(mDev, stream_in);
+#endif
 }
 
 } // namespace android
diff --git a/media/libaudiohal/DeviceHalLocal.h b/media/libaudiohal/DeviceHalLocal.h
index 865f2968e..6cc560130 100644
--- a/media/libaudiohal/DeviceHalLocal.h
+++ b/media/libaudiohal/DeviceHalLocal.h
@@ -107,7 +107,9 @@ class DeviceHalLocal : public DeviceHalInterface
 
   private:
     audio_hw_device_t *mDev;
-
+#ifdef LEGACY_MTK_AV_BLOB
+    audio_stream_in_t *mIn;
+#endif
     friend class DevicesFactoryHalLocal;
 
     // Can not be constructed directly by clients.
-- 
2.20.1

